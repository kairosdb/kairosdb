kairosdb.telnetserver.port=4242

kairosdb.service.telnet=org.kairosdb.core.telnet.TelnetServerModule
kairosdb.service.http=org.kairosdb.core.http.WebServletModule
kairosdb.service.reporter=org.kairosdb.core.reporting.MetricReportingModule


#===============================================================================
# Uses Quartz Cron syntax - default is to run every minute
kairosdb.reporter.schedule=0 */1 * * * ?

#===============================================================================
# Set to 0 to turn off HTTP port
kairosdb.jetty.port=8080
kairosdb.jetty.static_web_root=webroot

# To enable SSL uncomment the following lines and specify the path to the keyStore and its password and port
#kairosdb.jetty.ssl.port=443
#kairosdb.jetty.ssl.keystore.path=
#kairosdb.jetty.ssl.keystore.password=

#To enable http basic authentication uncomment the following lines and specify
#the user name and password for authentication.
#kairosdb.jetty.basic_auth.user=
#kairosdb.jetty.basic_auth.password=

#===============================================================================
kairosdb.service.datastore=org.kairosdb.datastore.h2.H2Module
kairosdb.datastore.concurrentQueryThreads=5
#kairosdb.service.datastore=org.kairosdb.datastore.cassandra.CassandraModule
#kairosdb.service.datastore=org.kairosdb.datastore.remote.RemoteModule

#this module is built using the code at https://github.com/brianhks/opentsdb
#kairosdb.service.datastore=net.opentsdb.kairosdb.HBaseModule

#===============================================================================
#H2 properties
kairosdb.datastore.h2.database_path=build/h2db

#===============================================================================
#Cassandra properties
#host list is in the form> 1.1.1.1:9160,1.1.1.2:9160
kairosdb.datastore.cassandra.host_list=localhost:9160
kairosdb.datastore.cassandra.keyspace=kairosdb
kairosdb.datastore.cassandra.replication_factor=1
kairosdb.datastore.cassandra.write_delay=1000
kairosdb.datastore.cassandra.write_buffer_max_size=500000
#When reading one row read in 10k
kairosdb.datastore.cassandra.single_row_read_size=10240

#The number of rows to read when doing a multi get
kairosdb.datastore.cassandra.multi_row_size=1000
#The amount of data to read from each row when doing a multi get
kairosdb.datastore.cassandra.multi_row_read_size=1024

#Size of the row key cache size.  This can be monitored by querying
#kairosdb.datastore.write_size and filtering on the tag buffer = row_key_index
#Ideally the data written to the row_key_index should stabilize to zero except
#when data rolls to a new row
kairosdb.datastore.cassandra.row_key_cache_size=10240

kairosdb.datastore.cassandra.string_cache_size=5000

# Uses Quartz Cron syntax - default is to run every five minutes
kairosdb.datastore.cassandra.increase_buffer_size_schedule=0 */5 * * * ?

# Controls the read and write consistency levels for cassandra operations
kairosdb.datastore.cassandra.read_consistency_level=ONE
kairosdb.datastore.cassandra.write_consistency_level=QUORUM

#for cassandra authentication use the following
#kairosdb.datastore.cassandra.auth.[prop name]=[prop value]
#example:
#kairosdb.datastore.cassandra.auth.username=admin
#kairosdb.datastore.cassandra.auth.password=eat_me

#===============================================================================
#HBase properties
kairosdb.datastore.hbase.timeseries_table=tsdb
kairosdb.datastore.hbase.uinqueids_table=tsdb-uid
kairosdb.datastore.hbase.zoo_keeper_quorum=localhost
kairosdb.datastore.hbase.zoo_keeper_base_dir=
kairosdb.datastore.hbase.auto_create_metrics=true

#===============================================================================
#Remote datastore properties
#Location to store data locally before it is sent off
kairosdb.datastore.remote.data_dir=.
kairosdb.datastore.remote.remote_url=http://10.92.1.41:8080

# quartz cron schedule for sending data (currently set to 30 min)
kairosdb.datastore.remote.schedule=0 */30 * * * ?

# delay the sending of data for a random number of seconds.
# this prevents all remote kairos nodes from sending data at the same time
# the default of 600 means the data will be sent every half hour plus some some
# delay up to 10 minutes.
kairosdb.datastore.remote.random_delay=0

#===============================================================================
#Uncomment this line to require oauth connections to http server
#kairosdb.service.oauth=org.kairosdb.core.oauth.OAuthModule

#OAuth consumer keys and secrets in the form
#kairosdb.oauth.consumer.[consumer key]=[consumer secret]

#===============================================================================
# Cache file cleaning schedule. Uses Quartz Cron syntax
kairosdb.query_cache.cache_file_cleaner_schedule=0 0 12 ? * SUN *

#By default the query cache is located in kairos_cache under the system temp folder as
#defined by java.io.tmpdir system property.  To override set the following value
#kairosdb.query_cache.cache_dir=

#===============================================================================
# Settings for the carbon server protocol handler
#Turn the carbon endpoint on by uncommenting the following line
#kairosdb.service.carbon=org.kairosdb.core.carbon.CarbonServerModule
kairosdb.carbon.tagparser=org.kairosdb.core.carbon.HostTagParser
kairosdb.carbon.text.port=2003
kairosdb.carbon.pickle.port=2004

#Determins the size of the buffer to allocate for incoming pickles
kairosdb.carbon.pickle.max_size=2048

kairosdb.carbon.hosttagparser.host_pattern=[^.]*\.([^.]*)\..*
kairosdb.carbon.hosttagparser.host_replacement=$1
kairosdb.carbon.hosttagparser.metric_pattern=([^.]*)\.[^.]*\.(.*)
kairosdb.carbon.hosttagparser.metric_replacement=$1.$2

#===============================================================================
# Hector configuration

#kairosdb.datastore.cassandra.hector.maxActive=50
#kairosdb.datastore.cassandra.hector.maxWaitTimeWhenExhausted=-1
#kairosdb.datastore.cassandra.hector.useSocketKeepalive=false
#kairosdb.datastore.cassandra.hector.cassandraThriftSocketTimeout=0
#kairosdb.datastore.cassandra.hector.retryDownedHosts=true
#kairosdb.datastore.cassandra.hector.retryDownedHostsDelayInSeconds=10
#kairosdb.datastore.cassandra.hector.retryDownedHostsQueueSize=-1
#kairosdb.datastore.cassandra.hector.autoDiscoverHosts=false
#kairosdb.datastore.cassandra.hector.autoDiscoveryDelayInSeconds=30
#kairosdb.datastore.cassandra.hector.autoDiscoveryDataCenters=
#kairosdb.datastore.cassandra.hector.runAutoDiscoveryAtStartup=false
#kairosdb.datastore.cassandra.hector.useHostTimeoutTracker=false
#kairosdb.datastore.cassandra.hector.maxFrameSize=2147483647
#kairosdb.datastore.cassandra.hector.loadBalancingPolicy=roundRobin | leastActive | dynamic
#kairosdb.datastore.cassandra.hector.hostTimeoutCounter=10
#kairosdb.datastore.cassandra.hector.hostTimeoutWindow=500
#kairosdb.datastore.cassandra.hector.hostTimeoutSuspensionDurationInSeconds=10
#kairosdb.datastore.cassandra.hector.hostTimeoutUnsuspendCheckDelay=10
#kairosdb.datastore.cassandra.hector.maxConnectTimeMillis=-1
#kairosdb.datastore.cassandra.hector.maxLastSuccessTimeMillis-1

#===============================================================================
