# This is the default configuration file for the Docker image
# which uses the Cassandra datastore.

kairosdb.health.healthyResponseCode=200

kairosdb.service.http=org.kairosdb.core.http.WebServletModule
#kairosdb.service.reporter=org.kairosdb.core.reporting.MetricReportingModule
#kairosdb.service.health=org.kairosdb.core.health.HealthCheckModule

#===============================================================================
#Each factory must be bound in a guice module.  The definition here defines what
#protocol data type the factory services.
#Default data point implementation for long - class must implement LongDataPointFactory
kairosdb.datapoints.factory.long=org.kairosdb.core.datapoints.LongDataPointFactoryImpl
#Default data point implementation for double - class must implement DoubleDataPointFactory
kairosdb.datapoints.factory.double=org.kairosdb.core.datapoints.DoubleDataPointFactoryImpl

kairosdb.datapoints.factory.string=org.kairosdb.core.datapoints.StringDataPointFactory

#===============================================================================
# Uses Quartz Cron syntax - default is to run every minute
kairosdb.reporter.schedule=0 */1 * * * ?

#===============================================================================
# Set to 0 to turn off HTTP port
kairosdb.jetty.port=8080
kairosdb.jetty.address=0.0.0.0
kairosdb.jetty.static_web_root=webroot

#===============================================================================

kairosdb.datastore.concurrentQueryThreads=25
kairosdb.service.datastore=org.kairosdb.datastore.cassandra.CassandraModule

#===============================================================================
kairosdb.datastore.cassandra.host_list=localhost
kairosdb.datastore.cassandra.user=
kairosdb.datastore.cassandra.password=
kairosdb.datastore.cassandra.keyspace=kairosdb
kairosdb.datastore.cassandra.replication_factor=1
kairosdb.datastore.cassandra.address_translator=

kairosdb.datastore.cassandra.read_consistency_level=LOCAL_ONE
kairosdb.datastore.cassandra.write_consistency_level_datapoint=LOCAL_ONE
kairosdb.datastore.cassandra.write_consistency_level_meta=LOCAL_ONE

#Size of the row key cache size.  This can be monitored by querying
#kairosdb.datastore.write_size and filtering on the tag buffer = row_key_index
#Ideally the data written to the row_key_index should stabilize to zero except
#when data rolls to a new row
kairosdb.datastore.cassandra.row_key_cache_size=16000
kairosdb.datastore.cassandra.metric_name_cache_size=1000
kairosdb.datastore.cassandra.tag_name_cache_size=64
kairosdb.datastore.cassandra.tag_value_cache_size=16000
kairosdb.datastore.cassandra.string_cache_size=5000

# write 3 days (3600*24*3 seconds)
kairosdb.datastore.cassandra.write_row_width=259200000
# read 3 weeks (3600*24*7*3 seconds) for compatibility
kairosdb.datastore.cassandra.read_row_width=1814400000

kairosdb.datastore.cassandra.index_tag_list = key,entity,application_id,stack_name

# Uses Quartz Cron syntax - default is to run every five minutes
#kairosdb.datastore.cassandra.increase_buffer_size_schedule=0 */5 * * * ?

#3 months in seconds
kairosdb.datastore.cassandra.datapoint_ttl=8070400

#===============================================================================
# Cache file cleaning schedule. Uses Quartz Cron syntax
#kairosdb.query_cache.cache_file_cleaner_schedule=0 0 12 ? * * *


# Controls reporting of metrics. Current values are defaults
#kairosdb.core.metrics.reporting_enabled=true

# New keys for the separate external caches. Current values are defaults
kairosdb.datastore.cassandra.cache.row_key.ttl_in_seconds=259200
kairosdb.datastore.cassandra.cache.row_key.size=16000000

kairosdb.datastore.cassandra.cache.metric_name.ttl_in_seconds=86400
kairosdb.datastore.cassandra.cache.metric_name.size=16384

kairosdb.datastore.cassandra.cache.tag_name.ttl_in_seconds=86400
kairosdb.datastore.cassandra.cache.tag_name.size=1024

kairosdb.datastore.cassandra.cache.tag_value.ttl_in_seconds=86400
kairosdb.datastore.cassandra.cache.tag_value.size=1024

# New split index flags.  These can be removed after new row_key_split_index table
# has filled over a 90-day window:
kairosdb.datastore.cassandra.use_new_split_index_read=true
kairosdb.datastore.cassandra.use_new_split_index_write=true
kairosdb.datastore.cassandra.new_split_index_start_time_ms=9223372036854775807